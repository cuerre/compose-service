version: "3.5"



#Docker Networks
networks:
    internal:
        driver: bridge
        name: internal
    external:
        driver: bridge
        name: external
    


# Docker Volumes
volumes:
    backend:
        name: backend
    database_data:
        name: database_data



# Docker services     
services:

    # MySQL Service
    database:
        image: mysql:8
        command: --default-authentication-plugin=mysql_native_password
        container_name: database
        restart: always
        tty: true
        stdin_open: true
        environment:
            MYSQL_ROOT_PASSWORD: "Cuerre#2030"
            MYSQL_USER: "user"
            MYSQL_PASSWORD: "Cuerre#2020"
            MYSQL_DATABASE: "cuerre" 
        volumes:           
            - database_data:/var/lib/mysql/
            - ./build/database:/docker-entrypoint-initdb.d
        ports:
            - "3306:3306"
        networks:
            - internal

    # Redis Service
    cache:
        image: redis:6-buster
        container_name: cache
        restart: always
        tty: true
        stdin_open: true
        ports:
            - "6379:6379"
        networks:
            - internal

    # Adminer Service
    adminer:
        image: adminer
        container_name: adminer
        restart: always
        tty: true
        stdin_open: true
        ports:
            - "8000:8080"
        networks:
            - internal
            - external

    # Web Service (backend)
    backend:
        image: registry.gitlab.com/cuerre/application:latest
        container_name: backend
        restart: always
        tty: true
        stdin_open: true
        depends_on:
            - database
            - cache
        environment:
            APP_VENDOR: "Achetronic"
            APP_NAME: "Cuerre"
            APP_ENV: local
            APP_KEY: "base64:ejHnK9FbRXrtLw85zkQ9Eo7DiyQyJfVSge20qX+rQ8s="
            APP_DEBUG: "false"
            APP_URL: http://cuerre.com
            LOG_CHANNEL: stack

            ###### RECAPTCHA ######
            RECAPTCHA_PUBLIC: 6Ldx_fwUAAAAAEzAKkjJE1slKqJI0ImcORaBCtq2
            RECAPTCHA_SECRET: 6Ldx_fwUAAAAAKiru101v3-oOQzQuh2ku_egodPe

            ###### CERBERO ######
            CERBERO_SESSION_LIFETIME: 60

            ###### MYSQL ######
            DB_CONNECTION: mysql
            DB_HOST: database
            DB_PORT: 3306
            DB_DATABASE: "cuerre"
            DB_USERNAME: "user"
            DB_PASSWORD: "Cuerre#2020"

            ###### REDIS ######
            BROADCAST_DRIVER: log
            CACHE_DRIVER: redis
            QUEUE_CONNECTION: sync
            SESSION_DRIVER: redis
            SESSION_LIFETIME: 120
            REDIS_HOST: cache
            REDIS_PASSWORD: null
            REDIS_PORT: 6379

            ###### SENDGRID ######
            MAIL_DRIVER: smtp
            MAIL_HOST: smtp.sendgrid.net
            MAIL_PORT: 587
            MAIL_USERNAME: apikey
            MAIL_PASSWORD: "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"
            MAIL_ENCRYPTION: tls
            MAIL_FROM_NAME: "${APP_NAME}"
            MAIL_FROM_ADDRESS: "noreply@cuerre.com"

            ###### PAYPAL ######
            #PAYPAL_CLIENT_ID: "AftQ4j5HVwakKO2Tr9pH6anDhmhlIk_PVHtoHTs_1fjr-H210CLPIppzevNr0mOF3aORAaT_LK_mYTws"
            #PAYPAL_CLIENT_SECRET: "EHUq2haz_FnKwUkyPMnvDNE1Jak502K_F1yMtBlEwdL98sTexpJcpik6GJn_GeeccyeJmM1Kp7dE6Gv5"
            PAYPAL_CLIENT_ID: "Abt3mjpBBcq8nncrKVFUnn7cIcoKmgLIRBTsD45AegROe1KfrTBaEOLB2nv3l683-wZSqbKyAmuNR3I7"
            PAYPAL_CLIENT_SECRET: "EBdd7_7CSkhfeiqhmpYKn0c-7JL3vHerJDF1hkGe6lqvJBmRiFwJkVma9SPx2QsFl0RtxtPZaE-hrJpR"

            ###### CUERRE ######
            CUERRE_CURRENT_VERSION: 1.0
            CUERRE_PROCESSING_CHUNK: 100
            CUERRE_PRODUCTS_CODES_PRICE_SMALL: 0.2
            CUERRE_PRODUCTS_CODES_PRICE_MEDIUM: 0.15
            CUERRE_PRODUCTS_CODES_PRICE_LARGE: 0.1
            CUERRE_PRODUCTS_CODES_GRACE: 12
            CUERRE_BILLING_CURRENCY: "eur"

        working_dir: /var/www
        volumes:
            - type: volume
              source: backend
              target: /var/www
        expose: 
            - "9000"
        networks: 
            - internal

    # Web Service (frontend)
    frontend:
        build:
            context: ./build/frontend
            dockerfile: Dockerfile
        image: frontend:nginx
        container_name: frontend
        depends_on:
            - backend
        restart: always
        tty: true
        stdin_open: true
        working_dir: /var/www
        volumes:
            - type: volume
              source: backend
              target: /var/www
              volume:
                nocopy: true
                read_only: true
        ports:
            - "8010:80"
        networks:
            - internal
            - external

    # lets-haproxy
    lets-haproxy:
        image: achetronic/lets-haproxy:latest
        container_name: lets-haproxy
        depends_on:
            - frontend
        restart: always
        tty: true
        stdin_open: true
        environment:
            ADMIN_MAIL: "me@achetronic.com"
            SKIP_CREATION: "false"
            # Environment: staging | production
            ENVIRONMENT: "staging" 
        volumes:
            - ./build/lets-haproxy/haproxy.cfg:/root/templates/haproxy.user.cfg:ro
            - ./letsencrypt/log:/var/log/letsencrypt
            - ./letsencrypt:/etc/letsencrypt
        ports:
            - "80:80"
            - "443:443"


